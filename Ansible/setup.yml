---
- name: Setup Front Interconectados
  hosts: localhost
  become: true
  tasks:
    - name: Ensure directories exist
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - /opt/interconectados/front-interconectados-vite/certbot
        - /opt/interconectados/front-interconectados-vite/certbot/conf
        - /opt/interconectados/front-interconectados-vite/certbot/www
        - /opt/interconectados/front-interconectados-vite/certbot/www/.well-known/acme-challenge

    - name: Check if docker-compose.yml exists
      stat:
        path: /opt/interconectados/front-interconectados-vite/docker-compose.yml
      register: docker_compose_file

    - name: Create docker-compose.yml if not exists
      copy:
        dest: /opt/interconectados/front-interconectados-vite/docker-compose.yml
        content: |
          version: '3'

          services:
            app:
              image: front-interconectados-vite:latest
              container_name: front-interconectados-vite-app-1
              restart: always
              ports:
                - "3000:3000"
              networks:
                - nginx-proxy

            nginx:
              image: nginx:latest
              container_name: front-interconectados-vite-nginx-1
              restart: always
              ports:
                - "80:80"
                - "443:443"
              volumes:
                - ./nginx.conf:/etc/nginx/nginx.conf
                - front-interconectados-vite_certbot_www:/var/www/certbot
                - front-interconectados-vite_certbot_conf:/etc/letsencrypt
              networks:
                - nginx-proxy

            certbot:
              image: front-interconectados-vite_certbot
              container_name: front-interconectados-vite-certbot-1
              entrypoint: /bin/sh -c "trap exit TERM; while :; do sleep 6h & wait \$${!}; certbot renew; done"
              volumes:
                - front-interconectados-vite_certbot_www:/var/www/certbot
                - front-interconectados-vite_certbot_conf:/etc/letsencrypt
              networks:
                - nginx-proxy

            watchtower:
              image: containrrr/watchtower
              container_name: watchtower
              restart: always
              command: --interval 300 --cleanup --label-enable --include-restarting
              volumes:
                - /var/run/docker.sock:/var/run/docker.sock
              networks:
                - nginx-proxy

          networks:
            nginx-proxy:
              external: true

          volumes:
            front-interconectados-vite_certbot_www:
            front-interconectados-vite_certbot_conf:
      when: not docker_compose_file.stat.exists

    - name: Check if nginx.conf is a file
      stat:
        path: /opt/interconectados/front-interconectados-vite/nginx.conf
      register: nginx_conf_file

    - name: Remove nginx.conf if it is a directory
      file:
        path: /opt/interconectados/front-interconectados-vite/nginx.conf
        state: absent
      when: nginx_conf_file.stat.isdir is defined and nginx_conf_file.stat.isdir

    - name: Create nginx.conf if not exists
      copy:
        dest: /opt/interconectados/front-interconectados-vite/nginx.conf
        content: |
          events {
              worker_connections 1024;
          }

          http {
              server {
                  listen 80;
                  server_name interconectados.duckdns.org;

                  location /.well-known/acme-challenge/ {
                      root /var/www/certbot;
                      autoindex on;
                  }

                  location / {
                      return 301 https://$host$request_uri;
                  }
              }

              server {
                  listen 443 ssl;
                  server_name interconectados.duckdns.org;

                  ssl_certificate /etc/letsencrypt/live/interconectados.duckdns.org/fullchain.pem;
                  ssl_certificate_key /etc/letsencrypt/live/interconectados.duckdns.org/privkey.pem;

                  location / {
                      proxy_pass http://front-interconectados-vite-app-1:3000;
                      proxy_set_header Host $host;
                      proxy_set_header X-Real-IP $remote_addr;
                      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                      proxy_set_header X-Forwarded-Proto $scheme;
                  }

                  location /.well-known/acme-challenge/ {
                      root /var/www/certbot;
                  }
              }
          }

    - name: Create nginx.temp.conf
      copy:
        dest: /opt/interconectados/front-interconectados-vite/nginx.temp.conf
        content: |
          events {
              worker_connections 1024;
          }

          http {
              server {
                  listen 80;
                  server_name interconectados.duckdns.org;

                  location /.well-known/acme-challenge/ {
                      root /var/www/certbot;
                      autoindex on;
                  }

                  location / {
                      return 200 'Temporary Nginx Server';
                  }
              }
          }

    - name: Create test file for Certbot validation
      copy:
        dest: /opt/interconectados/front-interconectados-vite/certbot/www/.well-known/acme-challenge/test.txt
        content: "test"

    - name: Build Certbot Docker image
      command: docker build -f /opt/interconectados/front-interconectados-vite/Dockerfile.certbot -t front-interconectados-vite_certbot .

    - name: Start Docker Compose with temporary Nginx configuration
      command: docker-compose -f /opt/interconectados/front-interconectados-vite/docker-compose.yml up -d

    - name: Wait for services to start
      pause:
        seconds: 10

    - name: Verify test file in Nginx container
      command: docker exec front-interconectados-vite-nginx-1 ls /var/www/certbot/.well-known/acme-challenge/test.txt

    - name: Run Certbot to obtain SSL certificates
      command: docker-compose run certbot certonly --webroot -w /var/www/certbot -m interconectados.sa@gmail.com --agree-tos --no-eff-email -d interconectados.duckdns.org --force-renewal
      async: 1800
      poll: 0
      register: certbot_run

    - name: Wait for Certbot to complete
      async_status:
        jid: "{{ certbot_run.ansible_job_id }}"
      register: certbot_result
      until: certbot_result.finished
      retries: 30
      delay: 10

    - name: Stop all Docker containers
      command: docker-compose -f /opt/interconectados/front-interconectados-vite/docker-compose.yml down

    - name: Update nginx.conf
      copy:
        src: /opt/interconectados/front-interconectados-vite/nginx.temp.conf
        dest: /opt/interconectados/front-interconectados-vite/nginx.conf
        remote_src: yes

    - name: Start Docker Compose with final Nginx configuration
      command: docker-compose -f /opt/interconectados/front-interconectados-vite/docker-compose.yml up -d

    - name: Ensure all Docker containers are running
      command: docker ps
