---
- name: Setup Front Interconectados
  hosts: localhost
  become: yes
  tasks:
    - name: Ensure directories exist
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - /opt/interconectados/front-interconectados-vite/certbot
        - /opt/interconectados/front-interconectados-vite/certbot/conf
        - /opt/interconectados/front-interconectados-vite/certbot/www
        - /opt/interconectados/front-interconectados-vite/certbot/www/.well-known/acme-challenge

    - name: Create docker-compose.yml if not exists
      copy:
        dest: /opt/interconectados/front-interconectados-vite/docker-compose.yml
        content: |
          version: '3'
          services:
            app:
              image: front-interconectados-vite:latest
              container_name: front-interconectados-vite-app-1
              restart: always
              ports:
                - "3000:3000"
              networks:
                - default
            nginx:
              image: nginx:latest
              container_name: front-interconectados-vite-nginx-1
              restart: always
              ports:
                - "80:80"
                - "443:443"
              volumes:
                - ./nginx.conf:/etc/nginx/nginx.conf
                - front-interconectados-vite_certbot_www:/var/www/certbot
                - front-interconectados-vite_certbot_conf:/etc/letsencrypt
              networks:
                - default
            certbot:
              image: front-interconectados-vite_certbot
              container_name: front-interconectados-vite-certbot-1
              entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 6h & wait \$${!}; certbot renew; done'"
              volumes:
                - front-interconectados-vite_certbot_www:/var/www/certbot
                - front-interconectados-vite_certbot_conf:/etc/letsencrypt
              networks:
                - default
            watchtower:
              image: containrrr/watchtower
              container_name: watchtower
              restart: always
              command: --interval 300 --cleanup --label-enable --include-restarting
              volumes:
                - /var/run/docker.sock:/var/run/docker.sock
              networks:
                - default
          networks:
            default:
              name: nginx-proxy
          volumes:
            front-interconectados-vite_certbot_www:
            front-interconectados-vite_certbot_conf:
      when: not docker_compose_file.stat.exists

    - name: Ensure nginx.conf file exists
      copy:
        dest: /opt/interconectados/front-interconectados-vite/nginx.conf
        content: |
          events {
              worker_connections 1024;
          }
          http {
              server {
                  listen 80;
                  server_name interconectados.duckdns.org;
                  location /.well-known/acme-challenge/ {
                      root /var/www/certbot;
                      autoindex on;  # Agregado para permitir el listado del directorio
                  }
                  location / {
                      return 200 'Temporary Nginx Server';
                  }
              }
          }
      when: not nginx_conf_file.stat.exists

    - name: Ensure nginx.temp.conf file exists
      copy:
        dest: /opt/interconectados/front-interconectados-vite/nginx.temp.conf
        content: |
          events {
              worker_connections 1024;
          }
          http {
              server {
                  listen 80;
                  server_name interconectados.duckdns.org;
                  location /.well-known/acme-challenge/ {
                      root /var/www/certbot;
                      autoindex on;  # Agregado para permitir el listado del directorio
                  }
                  location / {
                      return 200 'Temporary Nginx Server';
                  }
              }
          }
      when: not nginx_temp_conf_file.stat.exists

    - name: Create test file for Certbot validation
      copy:
        dest: /opt/interconectados/front-interconectados-vite/certbot/www/.well-known/acme-challenge/test.txt
        content: "test"

    - name: Build Certbot Docker image
      command: docker build -f /opt/interconectados/front-interconectados-vite/Dockerfile.certbot -t front-interconectados-vite_certbot .

    - name: Start Docker Compose with temporary Nginx configuration
      command: docker-compose -f /opt/interconectados/front-interconectados-vite/docker-compose.yml up -d
      environment:
        DOCKER_NET_NAME: "nginx-proxy"

    - name: Wait for services to start
      pause:
        seconds: 10

    - name: Verify challenge file in Nginx container
      command: docker cp /opt/interconectados/front-interconectados-vite/certbot/www/.well-known/acme-challenge/test.txt front-interconectados-vite-nginx-1:/var/www/certbot/.well-known/acme-challenge/test.txt

    - name: Run Certbot to generate SSL certificates
      command: docker-compose -f /opt/interconectados/front-interconectados-vite/docker-compose.yml run certbot certonly --webroot -w /var/www/certbot -m interconectados.sa@gmail.com --agree-tos --no-eff-email -d interconectados.duckdns.org --force-renewal

    - name: Wait for Certbot to complete
      pause:
        seconds: 30

    - name: Stop all Docker containers
      command: docker-compose -f /opt/interconectados/front-interconectados-vite/docker-compose.yml down

    - name: Move temporary Nginx configuration to final configuration
      command: mv /opt/interconectados/front-interconectados-vite/nginx.temp.conf /opt/interconectados/front-interconectados-vite/nginx.conf

    - name: Start Docker Compose with final Nginx configuration
      command: docker-compose -f /opt/interconectados/front-interconectados-vite/docker-compose.yml up -d
      environment:
        DOCKER_NET_NAME: "nginx-proxy"

    - name: Wait for services to start
      pause:
        seconds: 10

    - name: Check Docker container status
      command: docker-compose -f /opt/interconectados/front-interconectados-vite/docker-compose.yml ps
