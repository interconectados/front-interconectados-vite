---
- name: Setup Front Interconectados
  hosts: localhost
  become: yes
  vars:
    workdir: /opt/interconectados/front-interconectados-vite
    docker_compose_file: /opt/interconectados/front-interconectados-vite/docker-compose.yml
    nginx_conf_file: /opt/interconectados/front-interconectados-vite/nginx.conf
    nginx_temp_conf_file: /opt/interconectados/front-interconectados-vite/nginx.temp.conf

  tasks:
    - name: Ensure directories exist
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - "{{ workdir }}/certbot"
        - "{{ workdir }}/certbot/conf"
        - "{{ workdir }}/certbot/www"
        - "{{ workdir }}/certbot/www/.well-known/acme-challenge"

    - name: Check if docker-compose.yml exists
      stat:
        path: "{{ docker_compose_file }}"
      register: docker_compose_file_stat

    - name: Create docker-compose.yml if not exists
      copy:
        dest: "{{ docker_compose_file }}"
        content: |
          version: '3'

          services:
            app:
              image: front-interconectados-vite:latest
              container_name: front-interconectados-vite-app-1
              restart: always
              ports:
                - "3000:3000"
              networks:
                - default

            nginx:
              image: nginx:latest
              container_name: front-interconectados-vite-nginx-1
              restart: always
              ports:
                - "80:80"
                - "443:443"
              volumes:
                - ./nginx.conf:/etc/nginx/nginx.conf
                - front-interconectados-vite_certbot_www:/var/www/certbot
                - front-interconectados-vite_certbot_conf:/etc/letsencrypt
              networks:
                - default

            certbot:
              image: front-interconectados-vite_certbot
              container_name: front-interconectados-vite-certbot-1
              entrypoint: /bin/sh -c "trap exit TERM; while :; do sleep 6h & wait \$${!}; certbot renew; done"
              volumes:
                - front-interconectados-vite_certbot_www:/var/www/certbot
                - front-interconectados-vite_certbot_conf:/etc/letsencrypt
              networks:
                - default

            watchtower:
              image: containrrr/watchtower
              container_name: watchtower
              restart: always
              command: --interval 300 --cleanup --label-enable --include-restarting
              volumes:
                - /var/run/docker.sock:/var/run/docker.sock
              networks:
                - default

          networks:
            default:
              external:
                name: nginx-proxy

          volumes:
            front-interconectados-vite_certbot_www:
            front-interconectados-vite_certbot_conf:
      when: not docker_compose_file_stat.stat.exists

    - name: Check if nginx.conf is a file
      stat:
        path: "{{ nginx_conf_file }}"
      register: nginx_conf_stat

    - name: Remove nginx.conf if it is a directory
      file:
        path: "{{ nginx_conf_file }}"
        state: absent
      when: nginx_conf_stat.stat.isdir

    - name: Create nginx.conf if not exists
      copy:
        dest: "{{ nginx_conf_file }}"
        content: |
          events {
              worker_connections 1024;
          }

          http {
              server {
                  listen 80;
                  server_name interconectados.duckdns.org;

                  location /.well-known/acme-challenge/ {
                      root /var/www/certbot;
                      autoindex on;  # Agregado para permitir el listado del directorio
                  }

                  location / {
                      return 301 https://\$host\$request_uri;
                  }
              }

              server {
                  listen 443 ssl;
                  server_name interconectados.duckdns.org;

                  ssl_certificate /etc/letsencrypt/live/interconectados.duckdns.org/fullchain.pem;
                  ssl_certificate_key /etc/letsencrypt/live/interconectados.duckdns.org/privkey.pem;

                  location / {
                      proxy_pass http://front-interconectados-vite-app-1:3000;
                      proxy_set_header Host \$host;
                      proxy_set_header X-Real-IP \$remote_addr;
                      proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                      proxy_set_header X-Forwarded-Proto \$scheme;
                  }

                  location /.well-known/acme-challenge/ {
                      root /var/www/certbot;
                  }
              }
          }
      when: not nginx_conf_stat.stat.exists

    - name: Create nginx.temp.conf
      copy:
        dest: "{{ nginx_temp_conf_file }}"
        content: |
          events {
              worker_connections 1024;
          }

          http {
              server {
                  listen 80;
                  server_name interconectados.duckdns.org;

                  location /.well-known/acme-challenge/ {
                      root /var/www/certbot;
                      autoindex on;  # Agregado para permitir el listado del directorio
                  }

                  location / {
                      return 200 'Temporary Nginx Server';
                  }
              }
          }

    - name: Create test file for Certbot validation
      copy:
        dest: "{{ workdir }}/certbot/www/.well-known/acme-challenge/test.txt"
        content: "test"

    - name: Build Certbot Docker image
      command: docker build -f {{ workdir }}/Dockerfile.certbot -t front-interconectados-vite_certbot {{ workdir }}

    - name: Start Docker Compose with temporary Nginx configuration
      command: docker-compose -f {{ docker_compose_file }} up -d

    - name: Wait for services to start
      pause:
        seconds: 10

    - name: Verify test file in Nginx container
      command: docker exec front-interconectados-vite-nginx-1 ls /var/www/certbot/.well-known/acme-challenge/test.txt
      register: test_file_verification
      retries: 3
      delay: 10
      until: test_file_verification.rc == 0

    - name: Run Certbot to obtain SSL certificates
      command: docker-compose -f {{ docker_compose_file }} run certbot certonly --webroot -w /var/www/certbot -m interconectados.sa@gmail.com --agree-tos --no-eff-email -d interconectados.duckdns.org --force-renewal

    - name: Wait for Certbot to complete
      pause:
        seconds: 10

    - name: Stop Docker Compose
      command: docker-compose -f {{ docker_compose_file }} down

    - name: Replace temporary Nginx configuration with final configuration
      copy:
        src: "{{ nginx_temp_conf_file }}"
        dest: "{{ nginx_conf_file }}"
        remote_src: yes

    - name: Start Docker Compose with final Nginx configuration
      command: docker-compose -f {{ docker_compose_file }} up -d

    - name: Wait for services to start
      pause:
        seconds: 10

    - name: Verify Nginx service
      command: docker exec front-interconectados-vite-nginx-1 nginx -t
      register: nginx_verification
      retries: 3
      delay: 10
      until: nginx_verification.rc == 0

    - name: Display Nginx verification result
      debug:
        msg: "{{ nginx_verification }}"
